buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.4.1"
    }
}

plugins { // (1)
    id 'org.springframework.boot' version '2.4.1' // RELEASE 삭제
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}


apply plugin: "org.springframework.boot"

group 'springboot-webservice'
version '1.0-SNAPSHOT'+new Date().format("yyyyMMddHHmmss")
sourceCompatibility = 1.8

// 각종 의존성들을 어떤 원격 저장소에서 받을지를 정합니다.
// 기본적으로 mavenCentral 을 많이 사용하지만 최근에는 라이브러리 업로드 난이도 때문에 jcenter도 많이 사용합니다.
repositories {
    mavenCentral()
    jcenter()
}

test { // (2)
    useJUnitPlatform()
}

// 프로젝트 개발에 필요한 의존성들을 선언하는 곳입니다.
dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    // lombok
    implementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')

    // 권한 관련
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    implementation('org.springframework.session:spring-session-jdbc')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.springframework.security:spring-security-test")
}